name: Self‑hosted Dependabot

on:
  workflow_dispatch:          # run manually from the Actions tab
  push:
    branches: [ db_test ]
  # schedule:                   # …and/or on a timer
  #   - cron: '35 4 * * 1-5'    # 04:35 UTC Mon‑Fri


jobs:
  run-dependabot:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # Checkout to a directory to keep the working dir clean for the update.
        with:
          path: repo

      - name: Download CLI
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release download --repo dependabot/cli -p "*linux-amd64.tar.gz"
          tar xzvf *.tar.gz >/dev/null 2>&1
          ./dependabot --version
      
      - name: Run Dependabot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./dependabot update \
            -f repo/.github/dependabot/npm_yarn.yml \
            --local repo \
            --timeout 20m >> result.jsonl || true

      - name: Upload result
        uses: actions/upload-artifact@v4
        with:
          name: dependabot-result
          path: result.jsonl

  create-prs:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    needs: run-dependabot
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download result
        uses: actions/download-artifact@v4
        with:
          name: dependabot-result

      - name: Setup SSH signing key
        run: |
          echo $SSH_KEY_PRIVATE | base64 -d > /tmp/id_ed25519
          echo $SSH_KEY_PUBLIC > /tmp/id_ed25519.pub
          chmod 600 /tmp/id_ed25519
          eval "$(ssh-agent -s)"
          ssh-add /tmp/id_ed25519
          git config --global gpg.format ssh
          git config --global commit.gpgsign true
          git config --global user.signingkey /tmp/id_ed25519.pub
          mkdir -p ~/.config/git
          echo "${{ vars.DB_EMAIL }} $SSH_KEY_PUBLIC" > ~/.config/git/allowed_signers
          git config --global gpg.ssh.allowedSignersFile ~/.config/git/allowed_signers
        shell: bash
        env:
          SSH_KEY_PRIVATE: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_KEY_PUBLIC: ${{ vars.SSH_PUBLIC_KEY }}

      - name: Create PRs
        # env:
        #   GH_TOKEN: ${{ github.token }}
        run: bash create-pr.sh result.jsonl





permissions:
  # needed so we can push a branch and open PRs with GITHUB_TOKEN
  contents: write
  pull-requests: write

jobs:
  deps:
    runs-on: ubuntu-latest
    env:
      DEPENDABOT_REPO: ${{ github.repository }}
      DEPENDABOT_ECOSYSTEMS: "npm_and_yarn,github_actions"
      # test branch to write the commits to
      DEP_BRANCH: "dependabot-test"
      OUT_FILE: "/tmp/dependabot-output.json"

    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0            # Dependabot needs full history

    #################################################################
    # 1) Bring in your private signing key (no passphrase is easiest)
    #################################################################
    # - name: Import GPG signing key
    #   run: |
    #     echo "$GPG_PRIVATE_KEY" | gpg --batch --import -
    #     KEYID=$(gpg --list-secret-keys --with-colons | awk -F: '/^sec:/ {print $5; exit}')
    #     echo "KEYID=$KEYID" >> "$GITHUB_ENV"
    #   env:
    #     GPG_PRIVATE_KEY: ${{ secrets.DEPENDABOT_GPG_KEY }}

    # - name: Configure git + GPG
    #   run: |
    #     git config --global user.name  "Self‑Hosted Dependabot"
    #     git config --global user.email "dependabot@your-org.invalid"
    #     git config --global commit.gpgsign true
    #     git config --global user.signingkey "$KEYID"
    #     echo 'export GPG_TTY=$(tty)' >>"$GITHUB_ENV"

    - name: Setup SSH signing key
      run: |
        echo $SSH_KEY_PRIVATE | base64 -d > /tmp/id_ed25519
        echo $SSH_KEY_PUBLIC > /tmp/id_ed25519.pub
        chmod 600 /tmp/id_ed25519
        eval "$(ssh-agent -s)"
        ssh-add /tmp/id_ed25519
        git config --global gpg.format ssh
        git config --global commit.gpgsign true
        git config --global user.signingkey /tmp/id_ed25519.pub
        mkdir -p ~/.config/git
        echo "${{ vars.DB_EMAIL }} $SSH_KEY_PUBLIC" > ~/.config/git/allowed_signers
        git config --global gpg.ssh.allowedSignersFile ~/.config/git/allowed_signers
      shell: bash
      env:
        SSH_KEY_PRIVATE: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_KEY_PUBLIC: ${{ vars.SSH_PUBLIC_KEY }}

    ############################################################
    # 2) Run Dependabot CLI in *readonly* mode (no pushes yet)
    ############################################################
    # - name: Download Dependabot CLI
    #   uses: cli/cli-action@v3            # installs gh CLI which ships CLI too
    #   with:
    #     install-dependabot: true         # switch on extra installer

    - name: Install Dependabot CLI
      run: |
        go install github.com/dependabot/cli/cmd/dependabot@latest

    - name: Generate update diff
      run: |
        dependabot update \
          $DEPENDABOT_ECOSYSTEMS \
          "$DEPENDABOT_REPO" \
          --output "$OUT_FILE"

    ##########################################
    # 3) Apply the diff, commit, and open PR
    ##########################################
    - name: Apply updates + open PR
      env:
        GH_TOKEN: ${{ github.token }}
        GIT_AUTHOR_NAME: ${{ vars.DB_NAME }}
        GIT_AUTHOR_EMAIL: ${{ vars.DB_EMAIL }}
        GIT_COMMITTER_NAME: ${{ vars.DB_COMMITTER_NAME }}
        GIT_COMMITTER_EMAIL: ${{ vars.DB_COMMITTER_EMAIL }}
      run: |
        # returns 0 when no updates, 2 when there *are* updates
        dependabot create --input "$OUT_FILE" || status=$?
        [[ "$status" != "2" ]] && echo "No dependency changes" && exit 0

        git checkout -B "$DEP_BRANCH"
        git add -A
        git commit -S -m "chore(deps): self‑hosted Dependabot refresh"
        git push --force --set-upstream origin "$DEP_BRANCH"

        # create or update PR whose *base* is your test branch
        if gh pr view "$DEP_BRANCH" --head "$DEP_BRANCH" -R "$DEPENDABOT_REPO" &>/dev/null; then
          gh pr edit "$DEP_BRANCH" \
            --title "Self‑hosted Dependabot updates" \
            --body  "Automated dependency updates (test run)"
        else
          gh pr create \
            --base test \
            --head "$DEP_BRANCH" \
            --title "Self‑hosted Dependabot updates" \
            --body  "Automated dependency updates (test run)"
        fi
